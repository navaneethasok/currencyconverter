{"version":3,"sources":["CurrencyComponent.js","App.js","index.js"],"names":["usestyles","makeStyles","theme","container","display","justifyContent","alignItems","minWidth","spacing","Width","maxHeight","minHeight","background","borderRadius","boxShadow","gridItem","margin","color","flexDirection","padding","icon","CurrencyComponent","countryList","currency1","currency2","amount","setAmount","answer","handleChange","symbolFrom","find","item","currencyName","currencySymbol","symbolTo","classes","Grid","className","lg","sm","xs","Autocomplete","style","width","options","onChange","event","value","autoHighlight","getOptionLabel","option","name","renderInput","params","TextField","label","variant","e","target","fontSize","disabled","isNaN","App","APIKEY","useState","setCurrency1","setCurrency2","from","to","query","setQuery","setCountryList","setValue","setAnswer","useEffect","a","fetch","countryResponse","json","countries","countryArray","Object","values","results","ok","console","log","getCountries","getResponse","queryString","response","responseJson","result","parseFloat","toFixed","Fragment","textAlign","fieldName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8087320.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles, Grid, TextField} from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport SwapHorizontalCircleIcon from '@material-ui/icons/SwapHorizontalCircle';\r\n\r\nconst usestyles = makeStyles(theme => ({\r\n  \r\n    container: {\r\n        \r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: theme.spacing(20),\r\n        Width: theme.spacing(100),\r\n        maxHeight: '95vh',\r\n        minHeight:'60vh',\r\n        background: '#047572',\r\n        borderRadius: '15%',\r\n        boxShadow: `inset 9.91px 9.91px 10px #046865,\r\n        inset -9.91px -9.91px 10px #04827f`,\r\n    },\r\n    gridItem: {\r\n        \r\n     \r\n        margin:'auto 1rem',\r\n        \r\n        color:'#ffffff',\r\n        display: 'flex',\r\n        flexDirection:'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n\r\n        '& > *': {\r\n            padding: '5px 0 5px 0',\r\n            margin:'2px 0',\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color:'#ffffff',\r\n        },\r\n    },\r\n    icon: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding:'0.5rem 0',\r\n    }\r\n    \r\n   \r\n}));\r\n\r\n\r\nconst CurrencyComponent = ({ countryList, currency1, currency2, amount, setAmount, answer, handleChange }) => {\r\n    \r\n    const itemFrom = countryList.find(item => item.currencyName === currency1) || '';\r\n    const symbolFrom = itemFrom.currencySymbol || '';\r\n\r\n    const itemTo = countryList.find(item => item.currencyName === currency2) || '';\r\n    const symbolTo = itemTo.currencySymbol || '';\r\n\r\n    const classes = usestyles();\r\n\r\n    return (\r\n                \r\n        <Grid container className={classes.container} >\r\n            <Grid item className={classes.gridItem} lg sm xs={12}>\r\n                <h4>FROM</h4>\r\n                \r\n                <Autocomplete\r\n                \r\n                style={{ width: 200 }}\r\n                options={countryList}\r\n                onChange={(event,value)=>handleChange(event,'country1',value)}\r\n                autoHighlight\r\n                getOptionLabel={(option) => option.name}\r\n                \r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose a country\"\r\n                    variant=\"outlined\"\r\n                  \r\n                />\r\n                    \r\n                )}\r\n                />   \r\n                <p>{`${currency1}  ${symbolFrom } ` || '' }</p>\r\n\r\n                <TextField variant=\"outlined\"\r\n                    label=\"Amount\"\r\n                    style={{ width: 200 }}\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item lg sm xs={12} className={classes.icon}>\r\n            <SwapHorizontalCircleIcon fontSize='large' color='action' />\r\n            </Grid>\r\n\r\n\r\n            <Grid item className={classes.gridItem} lg sm xs={12}>\r\n            <h4>TO</h4>\r\n            \r\n                <Autocomplete\r\n                \r\n                style={{ width: 200 }}\r\n                options={countryList}\r\n                onChange={(e,value)=>handleChange(e,'country2',value)}\r\n                autoHighlight\r\n                getOptionLabel={(option) => option.name}\r\n               \r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose a country\"\r\n                    variant=\"outlined\"\r\n                    \r\n                   \r\n                />\r\n                    \r\n                )}\r\n                /> \r\n                \r\n                <p>{`${currency2}  ${symbolTo } ` || '' }</p>\r\n\r\n                <TextField variant=\"outlined\"\r\n                     label=\"Amount\"\r\n                    disabled\r\n                    style={{ width: 200 }}\r\n                    value={isNaN(answer)?'':answer }\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default CurrencyComponent\r\n","import React, { useEffect, useState } from \"react\";\nimport CurrencyComponent from \"./CurrencyComponent\";\n\n\nfunction App() {\n\n  const APIKEY = '5c8927db915535a5ef94';\n\n  const [currency1, setCurrency1] = useState('');\n  const [currency2, setCurrency2] = useState('');\n  const [query, setQuery] = useState({ from: '', to: '' });\n  const [countryList, setCountryList] = useState([]);\n  const [value, setValue] = useState(0);\n  const [amount, setAmount] = useState('');\n  const [answer, setAnswer] = useState(0);\n\n  \n  \n\n  useEffect(() => {\n    const getCountries = async() => {\n      const countryResponse = await fetch(`https://free.currconv.com/api/v7/countries?apiKey=${APIKEY}`);\n      const countries = await countryResponse.json();\n      const countryArray = Object.values(countries.results);\n      \n      \n      if (countryResponse.ok)\n        setCountryList(countryArray);\n      else\n        console.log('error');\n    }\n    getCountries();\n  }, [])\n\n  useEffect(() => {\n    const getResponse = async () => {\n      let queryString = `${query.from}_${query.to}`;\n      const response = await fetch(`https://free.currconv.com/api/v7/convert?q=${queryString}&compact=ultra&apiKey=${APIKEY}`);\n      const responseJson = await response.json();\n      if (response.ok)\n        setValue(Object.values(responseJson)[0]);\n      else\n        console.log('error');\n    }\n\n    if(query.from!=='' && query.to!=='')\n      getResponse();\n  }, [query]);\n  \n  useEffect(() => {\n    let result = parseFloat(value) * parseFloat(amount);\n    result = result.toFixed(2) || 0;\n    setAnswer(result);\n  },[amount,value,answer]);\n\n  const handleChange = (e,fieldName,value) => {\n    \n    if (fieldName === 'country1') {\n      if (value === null) {\n        \n        setCurrency1('');\n        setAmount('');\n      }\n      else {\n        \n        let currencyName = countryList.find((item) => item.name === value.name) || '';\n        setCurrency1(currencyName.currencyName);\n        \n        setQuery({ ...query, from: currencyName['currencyId'] });\n      }\n      \n    }\n    \n    else if (fieldName === 'country2') {\n      if (value === null) {\n        \n        setCurrency2('');\n        setAmount('');\n      }\n      else {\n        \n        let currencyName = countryList.find((item) => item.name === value.name) || '';\n        setCurrency2(currencyName.currencyName);\n      \n        setQuery({ ...query, to: currencyName['currencyId'] });\n      }\n    }\n   \n}\n\n  \n\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: 'center', fontSize: '3rem', color: '#FF9966' }}>\n        Currency Converter\n      </h1>\n      <CurrencyComponent\n        countryList={countryList}\n        currency1={currency1}\n        currency2={currency2}\n        handleChange={handleChange}\n        \n        amount={amount}\n        setAmount={setAmount}\n        answer={answer}\n      />\n\n    </React.Fragment>\n \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}